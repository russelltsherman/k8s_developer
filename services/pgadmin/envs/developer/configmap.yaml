apiVersion: v1
data:
  config_local.py: |
    AUTHENTICATION_SOURCES = ['oauth2']
    OAUTH2_CONFIG = [
      {
        # Oauth base url, ex: https://api.github.com/
        'OAUTH2_API_BASE_URL': None,
        # Oauth client id
        'OAUTH2_CLIENT_ID': 'pgadmin',
        # Oauth secret
        'OAUTH2_CLIENT_SECRET': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
        # The display name, ex: Google
        'OAUTH2_DISPLAY_NAME': 'Keycloak',
        # URL is used for authentication,
        # Ex: http://github.com/login/oauth/authorize
        'OAUTH2_AUTHORIZATION_URL': 'http://keycloak.lo/realms/master/protocol/openid-connect/auth',
        # The name of the of the oauth provider, ex: github, google
        'OAUTH2_NAME': 'keycloak',
        # URL to generate a token,
        # Ex: http://github.com/login/oauth/access_token
        'OAUTH2_TOKEN_URL': 'http://keycloak.lo/realms/master/protocol/openid-connect/token',
        # Name of the Endpoint, ex: user
        'OAUTH2_USERINFO_ENDPOINT': 'http://keycloak.lo/realms/master/protocol/openid-connect/userinfo',
        # Oauth scope, ex: 'openid email profile'
        # Note that an 'email' claim is required in the resulting profile
        'OAUTH2_SCOPE': 'email',
        # Font-awesome icon, ex: fa-github
        'OAUTH2_ICON': None,
        # UI button colour, ex: #0000ff
        'OAUTH2_BUTTON_COLOR': None
      }
    ]

  # - name: OAUTH2_AUTO_CREATE_USER
  #   value: "true"
  # # - name: OAUTH2_SCOPE
  # #   value:

kind: ConfigMap
metadata:
  name: pgadmin-config-local
  namespace: pgadmin
