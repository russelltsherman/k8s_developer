---
# Source: pgadmin4/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pgadmin4
  labels:
    app.kubernetes.io/name: pgadmin4
    helm.sh/chart: pgadmin4-1.12.0
    app.kubernetes.io/version: "6.10"
    app.kubernetes.io/managed-by: Helm
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app.kubernetes.io/name: pgadmin4
      app.kubernetes.io/instance: pgadmin4
  ingress:
    - ports:
        - port: 80

---
# Source: pgadmin4/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pgadmin4
  labels:
    app.kubernetes.io/name: pgadmin4
    helm.sh/chart: pgadmin4-1.12.0
    app.kubernetes.io/version: "6.10"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: pgadmin4/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: pgadmin4
  labels:
    app.kubernetes.io/name: pgadmin4
    helm.sh/chart: pgadmin4-1.12.0
    app.kubernetes.io/version: "6.10"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: pgadmin4
    app.kubernetes.io/instance: pgadmin4
---
# Source: pgadmin4/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin4
  labels:
    app.kubernetes.io/name: pgadmin4
    helm.sh/chart: pgadmin4-1.12.0
    app.kubernetes.io/version: "6.10"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pgadmin4
      app.kubernetes.io/instance: pgadmin4
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pgadmin4
        app.kubernetes.io/instance: pgadmin4
      annotations:
        checksum/secret: 4f695007a7002d219dc578d9f9c998fb6a87e6ca7f3672b83b0954be9cf54dd7

    spec:
      containers:
        - name: pgadmin4
          image: "docker.io/dpage/pgadmin4:6.10"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /misc/ping
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              port: http
              path: /misc/ping
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          env:
            - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
              value: "False"
            - name: PGADMIN_DEFAULT_EMAIL
              value: chart@example.local
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin4
                  key: password
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
          resources: {}
      volumes:
        - name: pgadmin-data
          persistentVolumeClaim:
            claimName: pgadmin4
      securityContext:
        fsGroup: 5050
        runAsGroup: 5050
        runAsUser: 5050
